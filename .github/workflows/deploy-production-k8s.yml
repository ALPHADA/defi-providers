# Build for development PRs

name: Auto Deploy to K8s production.

on:
  push:
    branches: [ master ]

jobs:
  setup-build:
    name: Build and Deploy to K8s production
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set current date and time as env variable
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y-%m-%dT%H:%M:%S')"

      - name: Get current Unix Timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +%s)"


      - name: Install doctl to interact with DO
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig and login to DO registry
        run: |
          doctl kubernetes cluster kubeconfig save dr-prod-k8s

      - name: Build, tag, and push image to Amazon ECR
       run: |
          doctl registry login
          docker build -t ${{ secrets.ECR_DO_REGISTRY }}/defi-providers:prod .
          docker push ${{ secrets.ECR_DO_REGISTRY }}/defi-providers:prod

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Deploy image to k8s production
        run: |
          sed -i "/image\:/c\          image: ${{ secrets.ECR_DO_REGISTRY }}/defi-providers:prod" kubernetes/prod/deployment.yaml
          aws secretsmanager get-secret-value --secret-id defi-providers-production-secrets --query SecretString --output text > secrets.env
          kubectl delete secret/defi-providers-production-secrets -n defi-providers
          kubectl create secret generic defi-providers-production-secrets --from-env-file=secrets.env -n defi-providers
          kubectl apply -f kubernetes/prod/deployment.yaml -n defi-providers
          kubectl apply -f kubernetes/prod/service.yaml -n defi-providers
        #        kubectl apply -f kubernetes/prod/hpa.yaml
        #        kubectl apply -f kubernetes/prod/ingress-alb-lookup.yaml
        env: # Or as an environment variable
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
